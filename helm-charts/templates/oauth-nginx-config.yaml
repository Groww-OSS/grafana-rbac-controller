kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-nginx-config
  namespace: {{ template "grafana-rbac-controller.namespace" . }}
data:
  default.conf: |
      map $http_upgrade $connection_upgrade {
          default upgrade;
          '' close;
      }

      server {
          listen 80 default_server;
          listen [::]:80 default_server;

          proxy_read_timeout 300;
          proxy_connect_timeout 300;
          proxy_send_timeout 300; 

          server_name  oauth-nginx;
          ssl off;
          server_tokens off;

          client_max_body_size 0;
          client_body_buffer_size 128k;

          client_header_buffer_size 10240k;
          large_client_header_buffers 16 10240k;

          location /oauth2/ {

              proxy_pass       http://127.0.0.1:4180;
              proxy_set_header Host                    $host;
              proxy_set_header X-Real-IP               $remote_addr;
              proxy_set_header X-Scheme                $scheme;
              proxy_set_header X-Auth-Request-Redirect $request_uri;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              
          }

          location = /oauth2/sign_in {

              proxy_pass       http://127.0.0.1:4180;
              proxy_set_header Host                    $host;
              proxy_set_header X-Real-IP               $remote_addr;
              proxy_set_header X-Scheme                $scheme;
              proxy_set_header X-Auth-Request-Redirect "/controller";
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              
          }

          location = /oauth2/auth {

              proxy_pass       http://127.0.0.1:4180;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Host             $host;
              proxy_set_header X-Real-IP        $remote_addr;
              proxy_set_header X-Scheme         $scheme;
              # nginx auth_request includes headers but not body
              proxy_set_header Content-Length   "";
              proxy_pass_request_body           off;

          }

          location = /oauth2/sign_out {

              proxy_pass       http://127.0.0.1:4180;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Host             $host;
              proxy_set_header X-Real-IP        $remote_addr;
              proxy_set_header X-Scheme         $scheme;
              # nginx auth_request includes headers but not body
              proxy_set_header Content-Length   "";
              proxy_pass_request_body           off;

          }

          location =/ {
              auth_request /oauth2/auth;
              error_page 401 = /oauth2/sign_in;

              # pass information via X-User and X-Email headers to backend (grafana),
              # requires running oauth2-proxy with --set-xauthrequest flag
              auth_request_set $user   $upstream_http_x_auth_request_user;
              auth_request_set $email  $upstream_http_x_auth_request_email;
            
                proxy_set_header Host {{ .Values.hostName }};
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;

              proxy_set_header X-WEBAUTH-EMAIL $email;
              proxy_set_header X-WEBAUTH-USER $email;
              proxy_set_header Authorization "";
              proxy_pass {{ template "grafana-rbac-controller.existing-grafana-service" .}};
          }

          location / {
              auth_request /oauth2/auth;
              error_page 401 = http://{{ .Values.hostName }}/;

              # pass information via X-User and X-Email headers to backend (grafana),
              # requires running oauth2-proxy with --set-xauthrequest flag
              auth_request_set $user   $upstream_http_x_auth_request_user;
              auth_request_set $email  $upstream_http_x_auth_request_email;
            
                proxy_set_header Host {{ .Values.hostName }};
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;

              proxy_set_header X-WEBAUTH-EMAIL $email;
              proxy_set_header X-WEBAUTH-USER $email;
              proxy_set_header Authorization "";
              proxy_pass {{ template "grafana-rbac-controller.existing-grafana-service" . }};
          }

          location = /controller {
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;

            auth_request_set $user   $upstream_http_x_auth_request_user;
            auth_request_set $email  $upstream_http_x_auth_request_email;

            proxy_set_header X-WEBAUTH-EMAIL $email;
            proxy_pass http://127.0.0.1:9080;

            proxy_intercept_errors on;
            error_page 502 503 504 = http://{{ .Values.hostName }}/;

          }
      }
          server {
          listen 8080;
          location / {
            return 200 'Health check ok';
          }
      }



      
      
